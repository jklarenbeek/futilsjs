{
  "definitions": {
    "iban": {
      "type": "string",
      "pattern": "/^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}$/i",
    },
    "phone": {
      "pattern": "/^(((0)[1-9]{2}[0-9][-]?[1-9][0-9]{5})|((\\+31|0|0031)[1-9][0-9][-]?[1-9][0-9]{6}))$/",
    },
    "mobile": {
      "type": "string",
      // "pattern": "^(((\\+31|0|0031)6){1}[1-9]{1}[0-9]{7})$",
      "pattern": "/^(((\+31|0|0031)6){1}[1-9]{1}[0-9]{7})$/",
    },
    "date": {
      "type": "string",
      "format": "date",
      // https://stackoverflow.com/questions/51224/regular-expression-to-match-valid-dates/8768241#8768241
      // PERL 5.1 VERSION
      // /
      //   (?:
      //       (?<month> (?&mon_29)) [\/] (?<day>(?&day_29))
      //     | (?<month> (?&mon_30)) [\/] (?<day>(?&day_30))
      //     | (?<month> (?&mon_31)) [\/] (?<day>(?&day_31))
      //   )
      //   [\/]
      //   (?<year> [0-9]{4})

      //   (?(DEFINE)
      //     (?<mon_29> 0?2 )
      //     (?<mon_30> 0?[469]   | (11) )
      //     (?<mon_31> 0?[13578] | 1[02] )

      //     (?<day_29> 0?[1-9] | [1-2]?[0-9] )
      //     (?<day_30> 0?[1-9] | [1-2]?[0-9] | 30 )
      //     (?<day_31> 0?[1-9] | [1-2]?[0-9] | 3[01] )
      //   )
      // /x
      // "comment": "Here is the Reg ex that matches all valid dates including leap years. Formats accepted mm/dd/yyyy or mm-dd-yyyy or mm.dd.yyyy format",
      // "pattern": "/^(?:(?:(?:0?[13578]|1[02])(\/|-|\.)31)\1|(?:(?:0?[1,3-9]|1[0-2])(\/|-|\.)(?:29|30)\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:0?2(\/|-|\.)29\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9])|(?:1[0-2]))(\/|-|\.)(?:0?[1-9]|1\d|2[0-8])\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/g",
    },
    "currency": {
      "type": "string",
      "enum": [ "EURO" ],
    },
    "CustomerAddressNL": {
      "type": "object",
      "description": "Waar wil je dat je bestelling bezorgd wordt?",
      "comment": "Dit is een Nederlands adres",
      "required": [ 'streetAddress', 'zipCode', 'Locality' ],
      "properties": {
        "streetAddress": {
          "type": "string",
          "title": "Straatnaam",
          "maxLength": 254,
          "minLength": 2,
          // "pattern": "^([1-9][e][\s])*([a-zA-Z]+(([\.][\s])|([\s]))?)+[1-9][0-9]*(([-][1-9][0-9]*)|([\s]?[a-zA-Z]+))?$",
          "pattern": "/^([1-9][e][\s])*([a-zA-Zéëüöêåø\.-]+(([\.][\s])|([\s]))?)+[1-9][0-9]*(([-][1-9][0-9]*)|([\s]?[a-zA-Z]+))?$/i",
          "propertyOrder": 1,
          "propertyGroup": "left",
        },
        "zipCode": {
          "type": "string",
          "title": "Postcode",
          "maxLength":6,
          "minLength":6,
          "pattern": "/^[1-9][0-9]{3}[\s]?[A-Za-z]{2}$/i",
          "propertyOrder": 4,
          "propertyGroup": "right",
        },
        "locality": {
          "type": "string",
          "title": "Plaatsnaam",
          "maxLength": 254,
          "minLength": 2,
          "propertyOrder": 5,
          "propertyGroup": "right",
        },
      }
    },
    "CustomerContact": {
      "type": "object",
      "description": "Hoe ben je te bereiken?",
      "required": [ "name", "email", "tel" ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Naam",
          "maxLength": 254,
          "minLength": 2,
          "pattern": "^\s*[\w]{2,20}\s+[\w]{2,20}",
          "propertyOrder": 1,
          "propertyGroup": "left",
        },
        "email": {
          "type": "string",
          "format": "email",
          "title": "E-mailadres",
          "propertyOrder": 2,
          "propertyGroup": "right",
        },
        "tel": {
          "type": "string",
          "title": "Telefoonnummer",
          "propertyOrder": 3,
          "propertyGroup": "left",
        },
        "legalName": {
          "type": "string",
          "title": "Bedrijfsnaam",
          "propertyOrder": 4,
          "propertyGroup": "right",
        }
      }
    },
    "DeliveryProvider": {
      "type": "object",
      "title": "Bezorgingsdienst",
      "properties": {
        "name": {
          "type":"string",
          "title": "Aanbieder",
          "description": "Bepaal hier uw favoriete pakketdistributeur."
        },
        "price": {
          "type": "number",
          "format": "money-euro",
          "default": 6.75,
        },
        "currency": {
          "$ref": "#/definitions/currency",
        },
        "minDelay": {
          "type": "number",
          "format": "days",
          "default": 1,
        },
        "maxDelay": {
          "type": "string",
          "format": "days",
          "default": 3,
        },
        "minWeight": {
          "type": "string",
          "format": "unit-weight",
          "default": "100gr",
        },
        "maxWeight": {
          "type": "string",
          "format": "unit-weight",
          "default": "10kg",
        }
      }
    },
    "CustomerDelivery": {
        "type": "object",
        "description": "Wanneer wil je de bestelling ontvangen?",
        "properties": {
          "deliveryDate": {
            "type": "date",
            "title": "Gewenste bezorgdatum",
            "default": "now()",
          },
          "provider": {
            "$ref": "#/definitions/DeliveryProvider",
            "enum": [
              { "name": "TNT", "price": 6.75 },
              { "name": "Verzendpro", "price": 4.73 },
              { "name": "DHL", "price": 4.95 },
              { "name": "GLS", "price": 6.20 },
            ],
          },
        },
    }
  },
  title: "Person",
  type: "object",
  required: ["name", "age", "favorite_color"],
  properties: {
      name: {
          type: "string",
          title: "Full name",
          description: "First and Last name",
          minLength: 4,
          default: "Jeremy Dorn"
      },
      age: {
          type: "integer",
          default: 25,
          minimum: 18,
          maximum: 99
      },
      favoriteColor: {
          type: "string",
          format: "color",
          title: "favorite color",
          default: "#ffa500"
      },
      gender: {
          type: "string",
          enum: ["male", "female"]
      },
      location: {
          type: "object",
          title: "Location",
          properties: {
              state: {
                  type: "string",
                  default: "CA",
                  propertyOrder: 3,
              },
              city: {
                  type: "string",
                  default: "San Francisco",
                  propertyOrder: 1,
              },
              citystate: {
                  type: "string",
                  title: "This is generated automatically from the previous two fields",
                  template: "{{city}}, {{state}}",
                  watch: {
                      city: 'location.city',
                      state: 'location.state'
                  },
                  propertyOrder: 2,
              }
          }
      },
      pets: {
          type: "array",
          format: "table",
          title: "Pets",
          uniqueItems: true,
          required: ['type'],
          items: {
              type: "object",
              title: "Pet",
              properties: {
                  type: {
                      type: "string",
                      enum: ["cat","dog","bird","reptile","other"],
                      default: "dog",
                  },
                  name: {
                      type: "string",
                  }
              }
          },
          default: [
              {
                  type: "dog",
                  name: "Walter"
              }
          ]
      }
  }
}